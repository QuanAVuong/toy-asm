: call subprogram SUM to compute sum (A[i] : 0 <= i < |A|)

         lis	 $1,       1	: $1 = 1
         lis	 $D, @A			: 
         lih	 $D, @A			: $D = @A
         sub	 $C, $D,  $1	: $C = @A[-1] = @|A|
         l  	 $C, $C     	: $C = |A|
         lis	 $F, @SUM		: 
         lih	 $F, @SUM		: $F = @SUM
         cal					: $F = @RETURN 	(call SUM)
		 : $1 ≡ 1, $D = @A, $C = |A|, $F = @RETURN

RETURN 

		 : $1 ≡ 1, $D = @A, $C = |A|, $E = sum (A[i] : 0 <= i < |A|)
         mov	 $A, $E     	: prepare to write the sum
         write	            	: write the sum
         exit	            	: terminate execution