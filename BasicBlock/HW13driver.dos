: BasicBlock subprogram interface
:
: label BASICBLOCK
:
: on entry
:		$F = <return address>
:		$A = @A
:		$B = @B = @A + 1
:		$C = @C = @B + 1 = @A + 2
:		$D = @D = @C + 1 = @B + 2 = @A + 3
:
: on exit
:		C = ( A + B ) & ( A - B )
:		D = ( A + B ) | ( A - B ) + 17
:		Memory, except for C and D is unchanged
:		(There is no constraint on any register values.)
:
: driver register usage (subprogram can be different)
:		$1 =  @C
:		$A =  @C + 1




	: @D = @C+1
	lis		$F, @BASICBLOCK  	: 
	lih		$F, @BASICBLOCK 	:	$F = @BASICBLOCK
	cal							:	call  BASICBLOCK
	
	lis		$1,		@C 			:
	lih		$1,		@C 			:	$1 = @C
	l		$A, 	$1    		:	$A =  C
	write	 					:	print C  (5?)
	
	l		$A, $1,  1			:	$A =  D
	write	           			:	print D (38?)
	exit	             		:	normal termination

A	13
B	 8
C	 0
D	 0
